# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:usr/bin/:/usr/local/sbin:opt/local/bin:/usr/local/opt/python@3.9/libexec/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/robert.baxter/.oh-my-zsh"

# GPG Signature
export GPG_TTY=$(tty)

# Set bypass for node 18
export NODE_OPTIONS="--no-experimental-fetch"

# Fuzzy navigation
. $HOME/code/z/z.sh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

# Don't check for insecure directories on load
ZSH_DISABLE_COMPFIX="true"
source $ZSH/oh-my-zsh.sh

#-----PATH-----#

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#-----Config-----#``

# Nvim as default
alias vim=nvim
alias vi=nvim
export EDITOR=nvim
export GIT_EDITOR=nvim

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --follow --no-ignore-vcs --hidden -g "!{node_modules/*,.git/*,tmp/*}"'

# Auto switch to projects .nvmrc version
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"
  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")
    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# alias-tips custom output
source ~/code/alias-tips/alias-tips.plugin.zsh
export ZSH_PLUGINS_ALIAS_TIPS_TEXT="Alias tip: "

#-----Aliases-----#``

# Purge everything
purge-cosmere() { cd $COSMERE_DIR && rm -rf node_modules && cd packages && rm -rf */node_modules && cd .. && yarn cache clean && yarn; }

# Quick config
z-config() { (nvim ~/.zshrc); }

# Quick lists
alias ls='ls -l'
alias lsa='ls -al'

# List open ports
alias open-ports='lsof -i -P | grep LISTEN'

# Quick source alias
resource() { source ~/.zshrc; }

# Repos
REPO_DIR="$HOME/repos"
ALPACA_DIR="$REPO_DIR/alpaca"
CORE_DIR="$REPO_DIR/core"
COSMERE_DIR="$REPO_DIR/cosmere"
DEERE_DIR="$REPO_DIR/deere-ui"
TEMP_DIR="$REPO_DIR/temp"

## PUPPETEER
# puppet-print() { node "$ALPACA_DIR/lib/assets/javascripts/puppeteer_report.js" $@ "$TEMP_DIR/output.pdf" && open "$TEMP_DIR/output.pdf" }
puppet-print() { node "$ALPACA_DIR/lib/assets/javascripts/puppeteer_report.js" $@ "$TEMP_DIR/output.pdf" }

# Quick actions

## Safer yarn
alias yarn-fl='yarn install --frozen-lockfile'

## ALPACA
update-alpaca() {
  echo "Don't forget to check and update your ruby version!"
  yarn install
  bower install
}
h-local() { cd "$CORE_DIR" && haproxy -d -f haproxy-local.cfg; }
h-beta() { cd "$CORE_DIR" && haproxy -d -f haproxy-beta.cfg; }
a-start() { cd "$ALPACA_DIR" && rails s; } # No changing of directories. Gotta check RVM / NVM before starting

## COSMERE
ssl-start() { cd "$COSMERE_DIR/packages/host" && yarn startSSL; }
c-start() { cd "$COSMERE_DIR/packages/$@" && yarn start; }
c-test() { (cd "$COSMERE_DIR/packages/$@" && yarn test && open "$COSMERE_DIR/packages/$@/coverage/index.html";) }
lint() { yarn run lint:js $@; }

## Clean up git branches that have merged
git-cleanup(){ git branch | grep -wEv "(main|develop)" | grep -wv "$(git branch --show-current)" | xargs git branch -D; }

## Legacy yarn bypass
lyarn() { export NODE_OPTIONS= && yarn $@; }

#-----Post-PATH-Config-----#

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="/usr/local/opt/autoconf@2.69/bin:$PATH"

export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
export PUPPETEER_EXECUTABLE_PATH=`which chromium`
